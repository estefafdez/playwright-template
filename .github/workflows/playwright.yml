name: Playwright Tests
on:
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * 1-5"
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
    types: [opened, synchronize]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test
        env:
          CI: true
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      # Publish Test Results
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: playwright-report/xray-report.xml
          check_name: "Playwright Test Results"
          comment_title: "Playwright Test Results"
          
      - name: Testdino Reporter
        if: always()
        run:
          npx --yes tdpw playwright-report/ --token="${TDPW_API_KEY}" --upload-html
        env:
          TDPW_API_KEY: ${{ secrets.TESTDINO_API }}    

      - name: Notify Slack
        uses: ravsamhq/notify-slack-action@v2
        if: always()
        with:
          status: ${{ job.status }}
          notification_title: "{workflow} has {status_message}"
          message_format: "*{workflow}* {status_message} in <{repo_url}|{repo}>"
          footer: "Linked Repo <{repo_url}|{repo}> | <{run_url}|Run URL>"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}